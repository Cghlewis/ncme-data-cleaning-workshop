[
  {
    "objectID": "slides/index.html#schedule",
    "href": "slides/index.html#schedule",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\nTime\nTopic\n\n\n\n\n8:45 - 9:00\nIntro/Logistics\n\n\n9:00 - 9:45\nFundamentals of Data Organization\n\n\n9:45 - 10:30\nStandardized Data Cleaning Checklist\n\n\n10:30 - 10:45\nBreak\n\n\n10:45 - 12:30\nData Cleaning Functions\n\n\n12:30 - 12:45\nDocumentation for Data Sharing"
  },
  {
    "objectID": "slides/index.html#logistics",
    "href": "slides/index.html#logistics",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Logistics",
    "text": "Logistics\nMaterials\nCghlewis.github.io/ncme-data-cleaning-workshop/\n\nExercises\nLogin to Posit Cloud workspace: https://posit.cloud/content/7872027.\n\n\nIf Posit Cloud doesn’t work, download materials locally:\n\nusethis::use_course(\n    \"https://github.com/Cghlewis/ncme-data-cleaning-workshop/raw/main/exercises/exercises.zip\",\n    destdir = \"___\")\n\n\n\n\nFeel free to interrupt me with questions/comments at any time ✋.\n\nGet up and move around as much as you need to 🚶.\n\n\nAll materials for the workshop can be found at this website.\n\nLink also lives at the bottom of these slides\n\nHands on exercises in R in the second half of this workshop\n\nPosit Cloud trouble shoot\nIf you have any trouble logging into Posit Cloud\n\nIf Posit Cloud is a total failure, you should also be able to download the materials\nAnd then I really hope that today will be a very relaxed environment."
  },
  {
    "objectID": "slides/index.html#about-the-speaker",
    "href": "slides/index.html#about-the-speaker",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "About the Speaker",
    "text": "About the Speaker\n\n\n\nIndependent Research Data Management Consultant\n\ncghlewis.com\n\nPreviously data manager for the Missouri Prevention Science Institute\nCo-organizer for R-Ladies St. Louis\n\nmeetup.com/rladies-st-louis\n\nCo-organizer for the POWER Data Management in Education Research Hub\n\nhttps://osf.io/ap3tk/\n\nAuthor Data Management in Large-Scale Education Research\n\ndatamgmtinedresearch.com\n\n\n\n\n\n\n\n\n\n\n\n\nIndependent research data management consultant\n\nThis means I work for myself.\n\nPrior to this I worked for the MPSI for 8 years\nI’m also a co-organization for two organizations.\n\nwhose mission it is to promote gender diversity in the R community.\nWe organize monthly meetups\n\nI also organize the POWER Data Management in Education Research Hub.\n\nOur smaller hub is particularly focused on sharing knowledge around data management issues in education research.\n\nAnd then probably the most noteworthy thing about me right now is that I recently finished writing this book"
  },
  {
    "objectID": "slides/index.html#introductions",
    "href": "slides/index.html#introductions",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Introductions",
    "text": "Introductions\n\n\n\nYour name\nYour affiliation\nYour role\nYour data cleaning experience\nYour experience with R\n\n\n\n\n\nImage from Unsplash"
  },
  {
    "objectID": "slides/index.html#phases-of-data",
    "href": "slides/index.html#phases-of-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "3 Phases of Data",
    "text": "3 Phases of Data\n\n\n\nSo, before we begin, I want to clarify what we will be talking about today. So in terms of data, there are typically 3 phases.\nFirst, there is raw data. And I am defining raw data as data that comes directly from a source. - That source could be original data\n\nWhat makes it raw, no transformations\nYou simply downloaded\nAnd the thing about this raw data is that it usually is messy AND it usually (in the world of education research) contains some identifying information. And we often can’t share this outside of our research team.\n\nNext, we have the clean data. And this is the data that we will be talking about today.\n\nThis is the data we typically share\nThis data is still in its true, raw form, but has been de-identified and minimally altered to allow the data to be correctly interpreted.\nentire study sample (no outliers have been removed), all missing data is still labelled as missing (no imputation is done), and no analysis-specific variables are calculated.\n\nLast, we have all of these analytic datasets.\n\nThese are datasets that are created from the general clean dataset and contain further manipulations that are done for a specific analysis\nThese datasets will typically also be publicly shared in a repository\nBut these datasets are analysis specific and are not going to be part of the data cleaning process we are discussing today."
  },
  {
    "objectID": "slides/index.html#a-sampling-of-open-datasets",
    "href": "slides/index.html#a-sampling-of-open-datasets",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "A Sampling of Open Datasets",
    "text": "A Sampling of Open Datasets\n\n\n\n\n\n\n\n\nSo in preparation for this workshop, I went through several public repositories and found a sampling of shared datasets. Let me show you some of them.\nWhat do you notice when you look at these different datasets?\nThere is no real consistency in how data is structured, variables are named, or how information is coded. And this is a problem because it makes reuse of this data very difficult.\nData don’t necessarily have to be identically formatted. Different variable naming conventions can be used, different coding schemes can be used. But there are several data quality standards that all data should adhere to in order to allow data to be interpretable and usable, and that is what we are going to talk about today."
  },
  {
    "objectID": "slides/index.html#learning-objectives",
    "href": "slides/index.html#learning-objectives",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\nUnderstand how to assess a data set for 7 data quality indicators\n\n\n\nBe able to review a data set and apply a list of standardized data cleaning steps as needed\n\n\n\nFeel comfortable using R code to clean a data set using our standardized steps\n\n\n\nUnderstand types of documentation that should be shared alongside data"
  },
  {
    "objectID": "slides/index.html#the-data-are-ready",
    "href": "slides/index.html#the-data-are-ready",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "The Data are Ready",
    "text": "The Data are Ready\n\n\nHas anyone here ever had someone give them a dataset that they’ve said is good to go, but then you open the data and it looks something like this? Just a mess.\nI feel like this happens to me on a weekly basis.\nSo today we are going to review a standard set of data quality indicators that we can use to determine if a dataset is really ready to be shared or not."
  },
  {
    "objectID": "slides/index.html#data-quality-indicators-1",
    "href": "slides/index.html#data-quality-indicators-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "7 Data Quality Indicators",
    "text": "7 Data Quality Indicators\n\n\n\n\nAnalyzable\nInterpretable\nComplete\nValid\nAccurate\nConsistent\nDe-identified\n\n\n\n\n\nTaming the Data Beast, by Allison Horst"
  },
  {
    "objectID": "slides/index.html#analyzable",
    "href": "slides/index.html#analyzable",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Analyzable",
    "text": "Analyzable\n\nData should make a rectangle of rows and columns\n\nThe first row, and only the first row, is your variable names\nThe remaining data should be made up of values in cells\nAt least one column uniquely defines the rows in the data (e.g., unique identifier)\n\n\n\n\nSo first and foremost, data needs to make a rectangle. This rectangle shape is how machines read data.\n\nshort representation of the information contained in a column."
  },
  {
    "objectID": "slides/index.html#analyzable-1",
    "href": "slides/index.html#analyzable-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Analyzable",
    "text": "Analyzable\n\nColumn values are analyzable\n\nInformation is explicit\n\n\n\n\nAnother rule of analyzable data is that information is explicit, not implicit. This means unless data is actually missing, there should be no blanks in your data. They should be filled with the applicable values."
  },
  {
    "objectID": "slides/index.html#analyzable-2",
    "href": "slides/index.html#analyzable-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Analyzable",
    "text": "Analyzable\n\n\n\nAnother example of data that is not explicit is when color coding is used. Here, color coding is used to indicate study treatment groups. However, machines cannot interpret color codes. This information needs to be defined in a variable with values assigned for each group."
  },
  {
    "objectID": "slides/index.html#analyzable-3",
    "href": "slides/index.html#analyzable-3",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Analyzable",
    "text": "Analyzable\n\nOnly one piece of information is collected per variable\n\n\n\nAnd then last, for data to be analyzable, you should only collect one piece of information per variable. In this example, a rate variable has been included the data where the numerator is the number of incidents and the denominator is the total number of students in the school. But it is difficult to work with combined information. It’s much better to separate those pieces of information into their own variables and then you can aggregate information as needed."
  },
  {
    "objectID": "slides/index.html#exercise",
    "href": "slides/index.html#exercise",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “analyzable” indicator?\n\n\n\n\n−+\n01:00"
  },
  {
    "objectID": "slides/index.html#solution",
    "href": "slides/index.html#solution",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nData does not make a rectangle\nColor coding used to convey information\nMore than one piece of information in a variable\nBlank values implied to be 0 for Q4 variables"
  },
  {
    "objectID": "slides/index.html#interpretable",
    "href": "slides/index.html#interpretable",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Interpretable",
    "text": "Interpretable\n\n\n\nVariable names should be machine-readable\n\nUnique\nNo spaces or special characters except _\n\nThis includes no . or -\n\nNot begin with a number\nCharacter limit of 32\n\nVariable names should be human-readable\n\nMeaningful (gender instead of Q1)\nConsistently formatted (capitalization and delimiters)\nConsistent order of information\n\nwave_responder_scale# (w1_t_mast1)\n\n\n\n\n\n\n\nIn that case, by Allison Horst\n\n\n\n\n\n\nFirst interpretable applies to your variable names\nEven dashes are not allowed because R reads them as minus signs\nWhile periods are allowed in R, they aren’t in other languages like Stata so it’s best to avoid them.\nMost statistical programs are case sensitive so if you are inconsistent with things like delimiters and capitalization, it just makes it so much more difficult to work with your data."
  },
  {
    "objectID": "slides/index.html#interpretable-1",
    "href": "slides/index.html#interpretable-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Interpretable",
    "text": "Interpretable\n\nWhen publicly sharing data, it is recommended to share data in at least one non-proprietary format (e.g., CSV)\n\nBut if you would also like to share a copy in a commonly used format such as SPSS, SAS, or Stata, consider adding embedded metadata (i.e., variable label and value labels)\n\n\n\n\n\nBut interpretable can also apply to other formatting\nBecause that can really help with interpretation. Rather than having to flip back and forth to the data dictionary to see what codes mean or what a variable represents, the information lives within the dataset and can be accessed as needed."
  },
  {
    "objectID": "slides/index.html#exercise-1",
    "href": "slides/index.html#exercise-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “interpretable” indicator?\n\n\n\n\n−+\n01:00"
  },
  {
    "objectID": "slides/index.html#solution-1",
    "href": "slides/index.html#solution-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nSpaces and special characters used in variable names\nSome variable names are unclear\nInconsistent use of capitalization"
  },
  {
    "objectID": "slides/index.html#complete",
    "href": "slides/index.html#complete",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Complete",
    "text": "Complete\n\nCases\n\nThe number of rows in your dataset should total to your sample N\n\nNo missing cases\nNo duplicate cases (i.e., no unique identifier)\n\n\nVariables\n\nThe number of columns in your dataset should total to what you planned to have\n\nNo missing variables\n\nNo unexpected missing data\n\nIf you collected the data, it should exist in the dataset"
  },
  {
    "objectID": "slides/index.html#complete-1",
    "href": "slides/index.html#complete-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Complete",
    "text": "Complete\nTracking Database\n\n\n\n\n\nData Dictionary\n\n\n\n\n\n\nTwo documents that can be helpful for verifying if you have complete data are a participant tracking database and a data dictionary.\nA participant tracking database is a spreadsheet or database where a project coordinator tracks what is collected in a study for each participant. Depending on your role in the study, you may or may not have access to this type of database. If you do not, you are just going to have to trust that you have been given a dataset that includes the entire sample.\nA data dictionary is something you hopefully always have access to though and this should list out exactly what variables exist in a dataset and what those variables represent.\nBoth of these documents are excellent resources for determining if you have a complete dataset."
  },
  {
    "objectID": "slides/index.html#exercise-2",
    "href": "slides/index.html#exercise-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “complete” indicator?\n\n\n\n\n−+\n01:00\n\n\n\n\nHere we don’t have access to a tracking database or a data dictionary but there is still something we can catch in this dataset without those documents."
  },
  {
    "objectID": "slides/index.html#solution-2",
    "href": "slides/index.html#solution-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nThe data contain a duplicate ID (104)"
  },
  {
    "objectID": "slides/index.html#valid",
    "href": "slides/index.html#valid",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Valid",
    "text": "Valid\n\nVariables conform to the planned constraints\n\nPlanned variable types (e.g., numeric, character, date)\nAllowable variable values and ranges (e.g., 1-5)\nItem-level missingness aligns with variable universe rules and skip patterns"
  },
  {
    "objectID": "slides/index.html#valid-1",
    "href": "slides/index.html#valid-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Valid",
    "text": "Valid\n\n\nAgain, the data dictionary is going to be a really important document in determining if data is valid because the dicionary defines all of the constraints that need to be checked."
  },
  {
    "objectID": "slides/index.html#exercise-3",
    "href": "slides/index.html#exercise-3",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “valid” indicator?\n\n\n\n\n−+\n01:00\n\n\n\n\nAgain we don’t have a data dictionary for this example…"
  },
  {
    "objectID": "slides/index.html#solution-3",
    "href": "slides/index.html#solution-3",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nAGE/YR does not adhere to our planned variable type\nValues in Score fall out of our expected range"
  },
  {
    "objectID": "slides/index.html#accurate",
    "href": "slides/index.html#accurate",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Accurate",
    "text": "Accurate\n\nInformation should be accurate based on any implicit knowledge you have\n\nFor instance, values should not exist for a school where you know that data was not collected that wave\n\nAccurate within and across sources\n\nA date of birth collected from school records should match the date of birth provided by the student\nIf a student is in 2nd grade, they should be associated with a second grade teacher\n\n\n\nSo accuracy can be a tough thing to judge, but depending on your level of involvement in the study, you may have some implicit knowledge you can use to judge accuracy."
  },
  {
    "objectID": "slides/index.html#exercise-4",
    "href": "slides/index.html#exercise-4",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “accurate” indicator?\n\n\n\n\n−+\n01:00\n\n\n\n\nSo in this case we don’t have any implicit knowledge, but by comparing pieces of information within the dataset, what data quality issues do you see for the accurate indicator here?"
  },
  {
    "objectID": "slides/index.html#solution-4",
    "href": "slides/index.html#solution-4",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nID 105 has conflicting information for TEACHING LEVEL and SCHOOL"
  },
  {
    "objectID": "slides/index.html#consistent",
    "href": "slides/index.html#consistent",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Consistent",
    "text": "Consistent\n\nVariable values are consistently measured, formatted, or categorized within a column\nVariables are consistently measured across collections of the same form\n\n\n\nAnd the reason that this consistency matters is that a computer doesn’t know that three different spellings of yes are all still yes. It will think these are 3 different things."
  },
  {
    "objectID": "slides/index.html#exercise-5",
    "href": "slides/index.html#exercise-5",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “consistent” indicator?\n\n\n\n\n−+\n01:00"
  },
  {
    "objectID": "slides/index.html#solution-5",
    "href": "slides/index.html#solution-5",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nValues for GENDER are not consistently categorized"
  },
  {
    "objectID": "slides/index.html#de-identified",
    "href": "slides/index.html#de-identified",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identified",
    "text": "De-identified\n\n\nIn the world of education research we are often working with human subjects and we often promise those subjects that their identifying information will remain private\nDirect identifiers are unique to an individual and can be used alone to identify a participant.\nIndirect identifiers however are not necessarily unique to a particular individual, but if combined with other information they could be used to identify a participant.\n\nage + gender + education level\n50 + female + PhD\nit’s possible that someone could use that information to identify someone in a dataset"
  },
  {
    "objectID": "slides/index.html#de-identified-1",
    "href": "slides/index.html#de-identified-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identified",
    "text": "De-identified\n\nDirect identifiers are removed"
  },
  {
    "objectID": "slides/index.html#de-identified-2",
    "href": "slides/index.html#de-identified-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identified",
    "text": "De-identified\n\nOpen-ended questions\n\nThese variables may contain information that can directly or indirectly identify individuals\n\nOutliers\n\nIf someone has extreme values for a variable, it may be easier to identify that individual\n\nSmall cell sizes\n\nNCES Standard 4-2-10, suggests that all categories have at least 3 cases to minimize risk\n\nCombinations of variables, or crosstabs, can also create small cell-sizes\n\nrace + gender + grade level\n\n\n\n🚨 Consider this in the context of risk\n\nMath assessment may be low risk while a survey on substance use is higher risk\n\n\nBut there is more you need to check for.\nYou also need to consider all of this in the context of risk. So if you are collecting information that is fairly innocuous (like maybe it’s a math assessment), the risk of harm if your re-identified is pretty low. If you are collecting information like on substance use, the risk is higher because that information could impact your career, relationships, and so forth."
  },
  {
    "objectID": "slides/index.html#exercise-6",
    "href": "slides/index.html#exercise-6",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nWhat data quality issues do you detect for the “de-identified” indicator?\n\n\n\n\n−+\n01:00\n\n\n\n\nThis is a very small dataset so don’t worry about indirect identifiers right now. Focus more on direct identifiers"
  },
  {
    "objectID": "slides/index.html#solution-6",
    "href": "slides/index.html#solution-6",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Solution",
    "text": "Solution\n\nReplace School Name with an unique ID\nReview outliers and combination of demographics to see if other alterations are necessary"
  },
  {
    "objectID": "slides/index.html#biggest-advice",
    "href": "slides/index.html#biggest-advice",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Biggest Advice",
    "text": "Biggest Advice\nThe number one way to reduce data errors is to make a plan before you collect data\n\nCorrect data at the source\n\n\n\n\nPlan the variables you want to collect\n\n\n\n\nBuild your data collection/entry tools in a way that follows your plan\n\n\n\n\nTest your data tools before collecting/entering data\n\n\n\n\nCheck your data often during data collection/entry\n\n\nSo before we move on to how to clean data for the purposes of data sharing, I want to point out one really important thing. And that is, if you are collecting your own original data\nDoing this ensures not only that you have much less data cleaning to do in the end, but it also prevents you from potentially losing data or having to recollect bad data. So it’s 100% worth the time and effort to spend time planning for quality data collection in the beginning if you can.\nBut of course, we are not always in charge of data collection and we just have to deal with the data we are given and so are going to talk about this in the next sections."
  },
  {
    "objectID": "slides/index.html#data-cleaning",
    "href": "slides/index.html#data-cleaning",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Data Cleaning",
    "text": "Data Cleaning"
  },
  {
    "objectID": "slides/index.html#standard-data-cleaning-checklist",
    "href": "slides/index.html#standard-data-cleaning-checklist",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Standard Data Cleaning Checklist",
    "text": "Standard Data Cleaning Checklist\n\n\n Import the raw data\n Review the raw data\n Find missing data\n Adjust the sample\n De-identify data\n Drop irrelevant columns\n Split columns\n Rename variables\n Normalize variables\n Standardize variables\n\n Update variable types\n Recode variables\n Construct new variables\n Add missing values\n Add metadata\n Validate data\n Join data\n Reshape data\n Save clean data\n\n\n\nHowever, to produce datasets that consistently meet the data quality criteria we just reviewed, it can be helpful to follow a standardized checklist of data cleaning steps. These steps, although they are really general here, once you tailor them to your specific data source they can help you produce a dataset that meets our data quality standards.\nAs you use this checklist to clean your specific datasaet you use the steps that are relevant to your data and remove the steps that are not relevant.\nThe order of these steps are fluid. With the exception of the first two on the list, you can move them around in whatever order makes sense for your specific dataset.\nWe are going to take some time to review each step on this list with the exception of the ones in blue. Those require more time to cover than we have today, so instead I have linked to more information here for you to review in your own time."
  },
  {
    "objectID": "slides/index.html#import-raw-data",
    "href": "slides/index.html#import-raw-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Import raw data",
    "text": "Import raw data\n\n\nImporting your raw data will always be number one of course, and the most important rule here is to never make any manual edits directly in the raw data file. Your raw data file is your single source of truth for that data source. If you make errors in your data cleaning process, you should always be able to go back to the untouched raw data to start over again if you need to."
  },
  {
    "objectID": "slides/index.html#review-data",
    "href": "slides/index.html#review-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Review data",
    "text": "Review data\n\n\nReviewing your data should always be step number two. It’s important that you know exactly what is happening in your data before moving forward in the cleaning process.\nIf you have access to those documents we discussed earlier, participant tracking database and a data dictionary, now is the time to use them."
  },
  {
    "objectID": "slides/index.html#find-missing-data",
    "href": "slides/index.html#find-missing-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Find missing data",
    "text": "Find missing data\n\n\nIf you find that any data is missing in your review process (missing cases/missing variables) you’ll want to retrieve that missing data before moving forward in the cleaning process\nStart back at step 1"
  },
  {
    "objectID": "slides/index.html#adjust-the-sample",
    "href": "slides/index.html#adjust-the-sample",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Adjust the sample",
    "text": "Adjust the sample\n\n\nThis means removing anyone who should not be in the dataset - maybe they didn’t consent to be in the study\nIt also means taking care of any duplicates in your data\nThe first thing you’ll want to do before removing duplicates is determine if it is a true duplicate, not just an error in the data\nThen removing any true duplicates based on your duplicate removal rule\nIt’s really important that these kinds of decisions rules are documented for future data users. And we’ll talk more about where to document these kinds of things later."
  },
  {
    "objectID": "slides/index.html#de-identify-data",
    "href": "slides/index.html#de-identify-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identify data",
    "text": "De-identify data"
  },
  {
    "objectID": "slides/index.html#de-identify-data-1",
    "href": "slides/index.html#de-identify-data-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identify data",
    "text": "De-identify data"
  },
  {
    "objectID": "slides/index.html#de-identify-data-2",
    "href": "slides/index.html#de-identify-data-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identify data",
    "text": "De-identify data\n\n\n\n\nSource\nResource\n\n\n\n\nAlena Filip\nTable 2 provides pros and cons of various de-identification methods\n\n\nJ-PAL\nTable 3 provides a list of direct and indirect identifiers and recommended removal methods\n\n\nSchatschneider, et.al\nDeidentifying Data Guide\n\n\n\n\n\nRedaction\n\nEliminate the entire variable from the data\n\nSuppression\n\nRemove data in a particular cell or row (In this example, age 67 was an outlier so I suppressed that cell value and replaced it with -98 which I’ve coded as suppressed).\n\nGeneralization\n\nReduce precision in the data (In this example here, I’ve binned my age rages so they are less precise)\n\nTruncation\n\nRestricting upper and lower ranges to mask outliers\n\n\nThere are many, even more sophisticated ways, to de-identify data"
  },
  {
    "objectID": "slides/index.html#drop-irrelevant-columns",
    "href": "slides/index.html#drop-irrelevant-columns",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Drop irrelevant columns",
    "text": "Drop irrelevant columns"
  },
  {
    "objectID": "slides/index.html#split-columns",
    "href": "slides/index.html#split-columns",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Split columns",
    "text": "Split columns"
  },
  {
    "objectID": "slides/index.html#rename-variables",
    "href": "slides/index.html#rename-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Rename variables",
    "text": "Rename variables"
  },
  {
    "objectID": "slides/index.html#normalize-variables",
    "href": "slides/index.html#normalize-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Normalize variables",
    "text": "Normalize variables\n\nCompare the variable types in your raw data to the types you expected in your data dictionary.\n\nDo they align? If not, what needs to be done so that they do\n\n\n\n\nI realize this is unconventional terminology to use, but here I am using the term normalize to talk about returning variables to their normal or expected state."
  },
  {
    "objectID": "slides/index.html#standardize-variables",
    "href": "slides/index.html#standardize-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Standardize variables",
    "text": "Standardize variables\n\nAre columns consistently measured, categorized, and formatted according to your data dictionary?\n\nIf not, what needs to be done so that they are\n\n\n\n\nHere I am using the term standardize to convey the process of checking for consistency"
  },
  {
    "objectID": "slides/index.html#update-variable-types",
    "href": "slides/index.html#update-variable-types",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Update variable types",
    "text": "Update variable types\n\n\nCharacter to Numeric, Numeric to Date, And so forth"
  },
  {
    "objectID": "slides/index.html#recode-variables",
    "href": "slides/index.html#recode-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Recode variables",
    "text": "Recode variables\n\n\n\nThis includes recoding your categorical numeric values to match your data dictionary values\nBut it also includes any planned coding, such as reverse coding a variable\nAs well as recoding any implicit values to their explicit values"
  },
  {
    "objectID": "slides/index.html#construct-additional-variables",
    "href": "slides/index.html#construct-additional-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Construct additional variables",
    "text": "Construct additional variables\n\n\n\nThis is not the time to construct analysis-specific variables. This is the time to create or calculate variables that should always be a part of the core study dataset.\nThis could be things like grouping variables (treatment, cohort, site)\nIt could be time component variables (year, wave)\nIt could be additional unique identifiers that you need to add for linking purposes (like adding a school ID to a teacher file)\nOr it could be measure composite or summary scores that you want included in the core dataset\nAny other variables you want added to the core sharing dataset\nSome of these variables will be calculated, others may be merged in from other sources"
  },
  {
    "objectID": "slides/index.html#add-missing-values",
    "href": "slides/index.html#add-missing-values",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Add missing values",
    "text": "Add missing values"
  },
  {
    "objectID": "slides/index.html#data-validation",
    "href": "slides/index.html#data-validation",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Data validation",
    "text": "Data validation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou should absolutely be checking your transformations throughout your cleaning process, but then, before exporting your data you should do one final review to make sure you haven’t missed anything.\nHere are several examples where various researchers did not have data validation as part of their data cleaning process and found out much later on that their data contained errors. And so we want to try to prevent this scenario by catching any errors now, rather than later."
  },
  {
    "objectID": "slides/index.html#data-validation-1",
    "href": "slides/index.html#data-validation-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Data validation",
    "text": "Data validation\n\n\n\nComplete\n\nCheck for missing/duplicate cases\n\nCheck Ns by groups for completeness\n\nCheck for missing/too many columns\n\nValid and consistent\n\nCheck for unallowed categories/values out of range\n\nCheck ranges by groups\n\nCheck for invalid, non-unique, or missing study IDs\nCheck for incorrect variable types/formats\nCheck missing value patterns\n\n\n\n\nAccurate\n\nAgreement across variables\n\nDe-identified\n\nAll direct identifiers are removed\nAll indirect identifiers managed as needed\n\nInterpretable\n\nVariables correctly named\n\n\n\n\n\nUse your data quality indicator list as a guide when doing your final data review"
  },
  {
    "objectID": "slides/index.html#data-validation-2",
    "href": "slides/index.html#data-validation-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Data validation",
    "text": "Data validation\n\n\n\nDocumentation errors\n\nFix in documentation\n\nData cleaning errors\n\nFix in your cleaning process\n\nData entry/export process errors\n\nFix at the source and export new raw file\n\nTrue values that are inaccurate, uninterpretable, or outside of a valid range\n\nLeave the data as is (document the issue)\nRecode those values to designated error code\nCreate data quality indicators\nChoose one source of truth for inconsistent values\nUse logical/deductive editing\n\n\n\n\n\n\n\n\n\n\n\nWhat’s most important is that you document your decisions for future users"
  },
  {
    "objectID": "slides/index.html#export-data",
    "href": "slides/index.html#export-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Export data",
    "text": "Export data"
  },
  {
    "objectID": "slides/index.html#export-data-1",
    "href": "slides/index.html#export-data-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Export data",
    "text": "Export data\nWhen you export your files, it’s important to name them consistently and clearly.\n\nFollow rules similar to our variable naming rules\n\nMachine readable (except now - is allowed)\nHuman readable\n\nA user should be able to understand the contents of the file without opening it\n\n\n\n\nWhich gives you a better idea of what is in the file? 🤔\n\n“Project X Full Data.csv”\n“projectx_wave1_stu_svy_clean.csv”"
  },
  {
    "objectID": "slides/index.html#creating-a-data-cleaning-plan",
    "href": "slides/index.html#creating-a-data-cleaning-plan",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Creating a data cleaning plan",
    "text": "Creating a data cleaning plan\n\n\nUltimately what I like to do in a cleaning process is pull out my checklist, import and review my data, and then plan out the steps that are needed to clean my specific dataset"
  },
  {
    "objectID": "slides/index.html#break",
    "href": "slides/index.html#break",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "BREAK!",
    "text": "BREAK!"
  },
  {
    "objectID": "slides/index.html#break-1",
    "href": "slides/index.html#break-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "BREAK!",
    "text": "BREAK!\n\n\n\n−+\n15:00"
  },
  {
    "objectID": "slides/index.html#objects",
    "href": "slides/index.html#objects",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Objects",
    "text": "Objects\n\n\nIf you want to save the work you do, you need to save it to an object that lives in your environment\n\nObjects should follow the same naming rules we discussed earlier\n\nIf you simply want to view the results, you don’t need to save values into an object\n\n\n\n\n\nage &lt;- c(12, 10, 8)\n\nage &lt;- age + 1\n\n\n\nmean(age)\n\n[1] 11"
  },
  {
    "objectID": "slides/index.html#objects-1",
    "href": "slides/index.html#objects-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Objects",
    "text": "Objects\n\n\n\nData Frame (Tibble)\n\nTwo dimensional structure\n\n\ndf &lt;- data.frame(id = c(10, 20),\n                 age = c(12, 8))\n\ndf\n\n  id age\n1 10  12\n2 20   8\n\n\n\nVector\n\nConsists of one or more elements all of the same type\n\n\nid &lt;- c(10, 20)\n\nid\n\n[1] 10 20\n\n\n\nCommon vector types (class)\n\ncharacter, numeric, date, logical"
  },
  {
    "objectID": "slides/index.html#functions",
    "href": "slides/index.html#functions",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Functions",
    "text": "Functions\n\n\n\nAnatomy of a function\n\nfunction_name(argument1, argument2, argument3, …)\n\nthe first argument is usually an object\n\nYou can view arguments by typing ?functionname in your console\n\nArguments usually have defaults\n\nFor example mean(x, trim, na.rm)\n\ntrim = 0\nna.rm = FALSE\n\n\nR has many built in (base) functions\n\n\n  \n\n\n\nFunction\nTask\n\n\n\n\nView()\nView object\n\n\nstr()\nDisplay internal structure of an object\n\n\nc()\nCombine elements\n\n\nclass()\nCheck the class/type of an object\n\n\n\n\n\n\nIf you like the defaults, do nothing. You don’t have to type out the arguments. If you want to change the default, you need to type out the arguments."
  },
  {
    "objectID": "slides/index.html#packages",
    "href": "slides/index.html#packages",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Packages",
    "text": "Packages\n\nWe can also use functions that live in packages that we can install onto our computer\nOnce installed, there are two ways to call packages\n\nYou may see both methods used in these slides\n\n\n\n\n\nUsing library()\n\nlibrary(dplyr)\n\nselect(df, var1, var2) \n\n\nUsing Namespacing package::function()\n\n# library(dplyr) not needed\n\ndplyr::select(df, var1, var2) \n\n\n\n\nFoundational"
  },
  {
    "objectID": "slides/index.html#tidyverse",
    "href": "slides/index.html#tidyverse",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Tidyverse",
    "text": "Tidyverse\n\nAn opinionated collection of R packages designed for data science\nAll packages share an underlying design philosophy, grammar, and data structures"
  },
  {
    "objectID": "slides/index.html#tidyverse-1",
    "href": "slides/index.html#tidyverse-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Tidyverse",
    "text": "Tidyverse\n\nSelecting test_score and grade_level from our data frame named sch_data\n\n\n\nTidy Evaluation\n\n\nselect(df, test_score, \n       grade_level)\n\n# A tibble: 3 x 2\n  test_score grade_level\n       &lt;dbl&gt;       &lt;dbl&gt;\n1        350           3\n2        380           4\n3        290           5\n\n\n\nBase R\n\n\ndf[ , c(\"test_score\", \n              \"grade_level\")]\n\n# A tibble: 3 x 2\n  test_score grade_level\n       &lt;dbl&gt;       &lt;dbl&gt;\n1        350           3\n2        380           4\n3        290           5"
  },
  {
    "objectID": "slides/index.html#pipes",
    "href": "slides/index.html#pipes",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Pipes",
    "text": "Pipes\n\n2014+ magrittr pipe %&gt;%\n2021+ (R \\(\\geq\\) 4.1.0) native R pipe |&gt;\n\n\nIsabella Velásquez’s blog post Understanding the native R pipe |&gt; (2022)\n\n\n\n\n\n\nsch_data &lt;- select(sch_data, id, \n                    test_score)\n\nsch_data &lt;- filter(sch_data, \n                    test_score &gt; 300)\n\n\n\nsch_data &lt;- sch_data |&gt;\n  select(id, test_score) |&gt;\n  filter(test_score &gt; 300)\n\n\n\n\n\n\nTo turn on the native pipe:\nTools → Global Options → Code → Editing → Use Native Pipe Operator"
  },
  {
    "objectID": "slides/index.html#operators",
    "href": "slides/index.html#operators",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Operators",
    "text": "Operators\n\n\nComparison operators\n\n== equal to\n!= not equal to\n&lt; less than\n&gt; greater than\n%in% value is present within\n\n\ndf |&gt;\n  filter(city %in% c(\"boston\",\"philly\"))\n\n\nAssignment operators\n\n&lt;- Assign value to an object\n= Assign value to an object\n\n\ndf &lt;- df |&gt;\n  mutate(year = \"2024\")"
  },
  {
    "objectID": "slides/index.html#scenario",
    "href": "slides/index.html#scenario",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Scenario",
    "text": "Scenario\nTake 5 minutes to open and look at our data file.\n\nLog in to Posit Cloud and navigate to our project\n\nhttps://posit.cloud/content/7872027\n\nOpen the data folder and open “sample_tch_svy_raw.xlsx”\n\nNotice that the “labels” tab has some basic information about the variables\n\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/index.html#import-our-data",
    "href": "slides/index.html#import-our-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Import our data",
    "text": "Import our data\n\nCommon data importing functions\n\nread_csv(), read_delim() from the readr package\nread_excel() from the readxl package\nread_sav(), read_sas(), read_dta() from the haven package\nLearn more about importing multiple files at once here\n\n\n\nWhich function should we use to read in our sample data?🤔"
  },
  {
    "objectID": "slides/index.html#import-our-file",
    "href": "slides/index.html#import-our-file",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Import our file",
    "text": "Import our file\n\n\n\nread_excel() has several arguments.\n\npath\n\nName of the file, plus folder names as needed\n“data/w1_stu_obs_raw.xlsx”\n\nsheet = NULL\ncol_names = TRUE\nna = “”\nskip = 0\n\nType ?read_excel() in your console to see more arguments"
  },
  {
    "objectID": "slides/index.html#exercise-7",
    "href": "slides/index.html#exercise-7",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 3 minutes to import the data.\n\n\nOpen “exercises.Rmd” in our Posit Cloud project.\nNavigate to exercise 1.\nUpdate the code and run the code to read in the data using the green arrow.\nRun the code chunk to view the data.\n\nIf you get stuck, you can open “solutions.Rmd”\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/index.html#review-our-data",
    "href": "slides/index.html#review-our-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Review our data",
    "text": "Review our data\n\n\n\n\nHow many rows?\n\nIn this hypothetical situation, we assume we are not missing any cases\nHowever, there may be duplicates\n\nHow many columns?\n\nCompare to our data dictionary\n\nWhat are the variable values and ranges?\n\nCompare to our data dictionary\n\nHow much missing data do we have?\n\n\nThere are several functions we can use to explore data\n\ndplyr::glimpse()\nskimr::skim()\nbase::summary()\nsummarytools::dfSummary()\nHmisc::describe()"
  },
  {
    "objectID": "slides/index.html#exercise-8",
    "href": "slides/index.html#exercise-8",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 5 minutes to review our data.\n\nNavigate to exercise 2.\nRun the code.\n\nWrite down any potential issues you see in the data.\n\nOpen “sample_tch_svy_data_dictionary.xlsx” in the docs folder.\n\nWhat issues do you see when you compare the data to our data dictionary?\n\nReview “sample_tch_svy_cleaning-plan.txt” in the docs folder.\n\nHow does it compare to the issues you wrote down?\n\n\n\n\n\n−+\n05:00\n\n\n\n\nSo we are going to follow this data cleaning plan for the rest of this section"
  },
  {
    "objectID": "slides/index.html#adjust-the-sample-1",
    "href": "slides/index.html#adjust-the-sample-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Adjust the sample",
    "text": "Adjust the sample\n\nThere are two key functions we can use to both identify and remove duplicates in our data\n\n\njanitor::get_dupes()\n\nTells you which rows contain duplicate unique identifiers, if any\n\n\n\n\ndplyr::distinct()\n\nKeeps the first instance of a duplicate unique identifier\n\n\n\nSo the next step in our checklist is to adjust the sample And we found some duplicates in our sample"
  },
  {
    "objectID": "slides/index.html#adjust-the-sample-2",
    "href": "slides/index.html#adjust-the-sample-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Adjust the sample",
    "text": "Adjust the sample\n\nCheck for duplicatesRemove duplicatesRemove duplicates\n\n\n\ndf |&gt;\n  get_dupes(id_vars)\n\n\nReplace id_vars with your unique identifier\nIf you have more than one variable that uniquely identifies rows, use c(first_name, last_name)\n\n\n\n\ndf |&gt;\n  distinct(id_vars, \n           .keep_all = TRUE)\n\n\nReplace id_vars with your unique identifier/s\nAlways add the argument .keep_all = TRUE\nBut remember, this always keeps the first instance of your duplicate\n\nThis may not always be want you want\n\n\n\n\n\ndf |&gt;\n  arrange(date) |&gt;\n  distinct(id_vars, \n           .keep_all = TRUE)\n\n\nConsider arranging your data first, before removing duplicates\nReplace date with any variable that you want to arrange your data by\n\nThe default is to sort values in ascending order\n\nIf you want descending order `arrange(desc(date))"
  },
  {
    "objectID": "slides/index.html#exercise-9",
    "href": "slides/index.html#exercise-9",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 5 minutes to check for and remove duplicates.\n\nNavigate to exercise 3.\nRun the code to check for duplicates.\n\nWhich tch_id is duplicated?\n\nRun the code to remove our duplicates.\n\nOur documented rule is that if both surveys are complete, keep the most recently completed row.\n\nRun a check to make sure duplicates are removed.\nRun the code to confirm that we kept the most recent submission of the duplicate survey (“2024-04-02”).\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/index.html#de-identify-data-3",
    "href": "slides/index.html#de-identify-data-3",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identify data",
    "text": "De-identify data\n\nThe functions used here will depend on what is required.\n\nExamples of functions you might use:\n\ndplyr::select() to drop variables\ndplyr::case_when() or dplyr::recode() to collapse categories/recode values\ndplyr::*_join() to merge in study unique IDs\nstringr::str_remove_all() or stringr::str_replace_all() to redact character values\n\nFor our sample data we are going to use the following.\n\ndplyr::case_when() to recategorize names into our unique study ID values and\ndplyr::select() to drop identifying variables"
  },
  {
    "objectID": "slides/index.html#de-identify-data-4",
    "href": "slides/index.html#de-identify-data-4",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "De-identify data",
    "text": "De-identify data\n\nRecategorize valuesRecategorize valuesSelect variables\n\n\n\ndf |&gt;\n  dplyr::mutate(new_var_name =\n                  case_when(\n                    var_name == old_value1 ~ new_value1,\n                    var_name == old_value2 ~ new_value2\n                  ))\n\n\nTo learn more about setting default values for case_when(), type ?case_when in your console\nNote that there is a new function, case_match(), that is worth looking in to. It reduces repetition in the syntax.\n\n\n\n\n\nMy data frame that I want to de-identify\n\n\n     name score\n1    emma    22\n2 brandon    40\n\n\n\n\ndf |&gt;\n  mutate(id = \n           case_when(\n             name == \"emma\" ~ 300,\n             name == \"brandon\" ~ 301\n           ))\n\n     name score  id\n1    emma    22 300\n2 brandon    40 301\n\n\n\n\n\n\n\n\nTo select variables of interest\n\ndf |&gt;\n  select(varname1, varname2, varname3)\n\n\ndf |&gt;\n  select(varname1:varname3)\n\nUsing tidyselection helpers ::: {.cell}\ndf |&gt;\n  select(starts_with(\"grade\"))\n\n\n\nTo drop variables I add -\n\ndf |&gt;\n  select(-varname1)\n\n\ndf |&gt;\n  select(-varname1:varname3)\n\n\ndf |&gt;\n  select(-c(varname1, varname4))\n\n\ndf |&gt;\n  select(-starts_with(\"name\"))\n\n\n\n\n\n:::"
  },
  {
    "objectID": "slides/index.html#exercise-10",
    "href": "slides/index.html#exercise-10",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 5 minutes to de-identify our data\n\nNavigate to exercise 4.\nRun the code to create a sch_id variable.\n\nReview the new variable after it is created.\n\nRun the code to drop our identifying variables.\n\nReview to make sure those variables were removed.\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/index.html#rename-variables-1",
    "href": "slides/index.html#rename-variables-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Rename variables",
    "text": "Rename variables\nTwo functions we can use to rename variables\n\ndplyr::rename()\n\nCommonly used to rename just a few variables\n\npurrr::set_names()\n\nUsed to rename all of our variables\nVariables must be in the exact right order\n\n\n\n\n\nRename just a few variables\n\ndf |&gt;\n  rename(new_name = old_name)\n\n\nRename all variables\n\ndf |&gt;\n  set_names(c(\"name1\", \"name2\", \"name3\"))"
  },
  {
    "objectID": "slides/index.html#exercise-11",
    "href": "slides/index.html#exercise-11",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 3 minutes to rename variables\n\nNavigate to exercise 3.\nReview the current variable names.\nRename variables according to our data dictionary.\nCheck variable names again to make sure the renaming worked.\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/index.html#normalize-variables-1",
    "href": "slides/index.html#normalize-variables-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Normalize variables",
    "text": "Normalize variables\nThere are several functions that can help us remove unexpected values from our variables.\nSome examples of those include:\n\nstringr::str_remove_all()\nstringr::str_replace_all()\nreadr::parse_number()\n\n\nSay this is our data\n\n\n# A tibble: 3 x 2\n     id income \n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 $32,000\n2     2 120000 \n3     3 $45,000"
  },
  {
    "objectID": "slides/index.html#normalize-variables-2",
    "href": "slides/index.html#normalize-variables-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Normalize variables",
    "text": "Normalize variables\n\n\n\nRemove character values with stringr::str_remove_all()\n\ndf |&gt;\n  dplyr::mutate(income = \n                  str_remove_all(income, \"\\\\$|,\"))\n\n# A tibble: 3 x 2\n     id income\n  &lt;dbl&gt; &lt;chr&gt; \n1     1 32000 \n2     2 120000\n3     3 45000 \n\n\n\nNotice that our variable is still character type\n\n\nRemove character values with readr::parse_number()\n\ndf |&gt;\n  dplyr::mutate(income = \n                  parse_number(income))\n\n# A tibble: 3 x 2\n     id income\n  &lt;dbl&gt;  &lt;dbl&gt;\n1     1  32000\n2     2 120000\n3     3  45000\n\n\n\nNotice that parse_number() converts our variable to numeric type"
  },
  {
    "objectID": "slides/index.html#exercise-12",
    "href": "slides/index.html#exercise-12",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 3 minutes to normalize our tch_yrs variable\n\nNavigate to exercise 6.\nReview the current values for tch_yrs.\nRemove all non-numeric values from this variable.\nReview the new values in tch_yrs.\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/index.html#update-variable-type",
    "href": "slides/index.html#update-variable-type",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Update variable type",
    "text": "Update variable type\nDepending on what is needed, there are several functions we can use to change variable types.\n\nSome examples include:\n\nas.numeric()\nas.character()\nas.Date()\nSeveral functions in the lubridate package to assist with converting dates\njanitor::excel_numeric_to_date() can be very helpful at times"
  },
  {
    "objectID": "slides/index.html#update-variable-type-1",
    "href": "slides/index.html#update-variable-type-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Update variable type",
    "text": "Update variable type\nIt’s important to normalize variables before converting types (especially when converting from character to numeric)\n\n\n\nOur data without normalizing\n\ndf\n\n# A tibble: 3 x 2\n     id income \n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 $32,000\n2     2 120000 \n3     3 $45,000\n\n\n\nWhen we try to convert income to numeric….\n\ndf |&gt;\n  dplyr::mutate(income = \n                  as.numeric(income))\n\nWarning in mask$eval_all_mutate(quo): NAs introduced by coercion\n\n\n# A tibble: 3 x 2\n     id income\n  &lt;dbl&gt;  &lt;dbl&gt;\n1     1     NA\n2     2 120000\n3     3     NA\n\n\nWe end up converting several values to NA (notice our warning)"
  },
  {
    "objectID": "slides/index.html#exercise-13",
    "href": "slides/index.html#exercise-13",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 3 minutes to convert tch_yrs to numeric\n\nNavigate to exercise 7.\nReview the current variable type for tch_yrs.\nConvert the variable to numeric.\nReview the new variable type for tch_yrs.\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/index.html#recode-variables-1",
    "href": "slides/index.html#recode-variables-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Recode variables",
    "text": "Recode variables\nCommon functions for recoding values are\n\ndplyr::case_when()\ndplyr::recode()\ntidyr::replace_na()\n\n\n\n\n\ndf |&gt;\n  mutate(newvar = \n           recode(oldvar,\n                  `oldvalue` = newvalue))\n\n\n\ndf |&gt; \n  mutate(newvar = \n           replace_na(oldvar, \n                      replace = 0))"
  },
  {
    "objectID": "slides/index.html#recode-variables-2",
    "href": "slides/index.html#recode-variables-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Recode variables",
    "text": "Recode variables\n\ndplyr::across() allows you to apply the same transformation across multiple columns - This can be used in case_when(), recode(), or replace_na()\n\n\ndf |&gt;\n  mutate(across(var1:var3, \n                  ~ replace_na(., replace = 0)))\n\nThis will save over existing variables. - If you don’t want to save over the existing variables, you can add the argument .names which lives in the dplyr::across() function. This creates new variables with new names."
  },
  {
    "objectID": "slides/index.html#exercise-14",
    "href": "slides/index.html#exercise-14",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 5 minutes to recode variables\n\nNavigate to exercise 8.\nRecode the blank values for the grade variables.\n\nCheck to see if the recoding worked.\n\nRecode the mathanx variable.\n\nCheck to see that the recoding worked.\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/index.html#construct-new-variables",
    "href": "slides/index.html#construct-new-variables",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Construct new variables",
    "text": "Construct new variables\n\nThe most important function for constructing new variables is dplyr::mutate()\nFrom there, other functions may be required. For today, we are going to use rowSums() which allows us to create sum scores for each row\n\n\n\n\nThe default is to not calculate a sum if there are any NA values\n\ndf |&gt;\n  mutate(newvar = rowSums(\n    across(var1:var3)))\n\n\nIf you want to calculate a sum even if there are NA values, add na.rm = TRUE\n\ndf |&gt;\n  mutate(newvar = rowSums(\n    across(var1:var3), na.rm = TRUE))"
  },
  {
    "objectID": "slides/index.html#exercise-15",
    "href": "slides/index.html#exercise-15",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 3 minutes to construct gad_sum\n\nNavigate to exercise 9.\nCalculate gad_sum\nReview summary information for the new variable.\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/index.html#validate-data",
    "href": "slides/index.html#validate-data",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Validate data",
    "text": "Validate data\n\n\n\nCreate tables of information\n\ndplyr::count(), janitor::tabyl()\n\nCreate graphs\n\nggplot2\n\nCalculate summary statistics\n\nAll of the functions from “Review the data” section\n\nCreate codebooks\n\ncodebookr, memisc, sjPlot\n\nCreating tests that pass/fail based on a set of criteria\n\npointblank, validate, assertr, dataquieR\n\n\n\n\n\n\n\n\n\n\n\n\nThere are many ways to validate data based on data quality criteria\nYou most likely want to do a combination of these things in your validation process"
  },
  {
    "objectID": "slides/index.html#validate-data-1",
    "href": "slides/index.html#validate-data-1",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Validate data",
    "text": "Validate data\n\nCreate our validation criteriaReview the report\n\n\nHere we are using the pointblank package to develop some validation tests\n\n\ncreate_agent(df) |&gt;\n  rows_distinct(columns = vars(stu_id)) |&gt;\n  col_vals_not_null(columns = vars(stu_id)) |&gt;\n  col_vals_between(columns = vars(stu_id), left = 300, right = 500, na_pass = FALSE) |&gt;\n  col_is_numeric(columns = vars(age, test_score)) |&gt;\n  col_vals_between(columns = vars(test_score), left = 0, right = 500, na_pass = TRUE) |&gt;\n  interrogate()"
  },
  {
    "objectID": "slides/index.html#exercise-16",
    "href": "slides/index.html#exercise-16",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 5 minutes to validate our data\n\nNavigate to exercise 10.\nRun the validation code.\n\nDo all of our tests pass?\n\nUpdate the code with one more validation criteria. Run the code again.\n\nDo all of our tests still pass?\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/index.html#export-data-2",
    "href": "slides/index.html#export-data-2",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Export data",
    "text": "Export data\nSimilar to importing data, we have many options for exporting our data depending on the format we want to export to.\n\nopenxlsx::write.xlsx()\nhaven::write_sav(), haven::write_dta(), haven::write_sas()\nreadr::write_csv()\n\nx\n\nThe object we are exporting\n\nfile\n\nThe name of the new file plus any folders where you want the file to live\n\nna = “NA”\n\n\n\nwrite_csv(df, file = \"data/w1_stu_obs_clean.csv\", na = \"\")"
  },
  {
    "objectID": "slides/index.html#exercise-17",
    "href": "slides/index.html#exercise-17",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Exercise",
    "text": "Exercise\n\nTake 2 minutes to export our data\n\nNavigate to exercise 11.\nUpdate our code to export the clean data file.\nOnce exported, open the file to confirm it looks as expected.\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/index.html#coding-best-practices",
    "href": "slides/index.html#coding-best-practices",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Coding best practices",
    "text": "Coding best practices\n\n\n\nUse a coding template\nFollow a coding style guide\n\nThe tidyverse style guide\n\nUse relative file paths\n\n❌ “C:/Users/Crystal/Desktop/project/data/raw_file.csv”\n✔️ “data/raw_file.csv”\n\nWrite all cleaning steps in code\nComment every step in your code\nCheck all of your work throughout\nIf possible, have someone else review your code\n\n\n\n\n\n\n\n\n\n\nYou may have noticed that throughout these exercises, I always performed a check to make sure that the transformation worked as expected"
  },
  {
    "objectID": "slides/index.html#versioning",
    "href": "slides/index.html#versioning",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Versioning",
    "text": "Versioning\n\nVersion your code (“sample_tch_svy_cleaning_v01.R”)\nVersion your files (“sample_tch_svy_clean_v01.csv”)\nMake notes in a changelog."
  },
  {
    "objectID": "slides/index.html#types-of-documentation",
    "href": "slides/index.html#types-of-documentation",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Types of documentation",
    "text": "Types of documentation\n\n\n\n\nProject-level documentation\n\nProject summary document\n\nData-level documentation\n\nREADME\nCleaning code/Data cleaning plan\n\nVariable-level documentation\n\nData dictionary OR\nCodebook\n\nRepository Metadata\n\n\n\n\n✔️ Allows your data to be correctly interpreted and used\n\n✔️ Allows your work to be reproducible\n\n✔️ Allows your work to be findable\n\n\n\nAnd some documentation, like repository metadata, allows your data to be findable"
  },
  {
    "objectID": "slides/index.html#project-level-documentation",
    "href": "slides/index.html#project-level-documentation",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Project-level documentation",
    "text": "Project-level documentation\n\n\n\nFunding source\nOverview of study\nSetting and sample\nProject timeline\nMeasures used\nOverview of study procedures\n\nRecruitment, consent, data collection\n\nData preparation and processing\n\nData quality monitoring, de-identification procedures, decision rules\n\nAppendices\n\nCopies of instruments, consort diagrams\n\n\n\n\n\n\n\n\n\n\n\nThis would be where you could document your decision rules for things dropping duplicates"
  },
  {
    "objectID": "slides/index.html#data-level-documentation",
    "href": "slides/index.html#data-level-documentation",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Data-level documentation",
    "text": "Data-level documentation\n\n\nREADME\n\n\n\n\n\n\nData Cleaning Plan"
  },
  {
    "objectID": "slides/index.html#variable-level-documentation",
    "href": "slides/index.html#variable-level-documentation",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Variable-level documentation",
    "text": "Variable-level documentation\n\n\nData dictionary\n\n\n\n\n\n\nCodebook"
  },
  {
    "objectID": "slides/index.html#repository-metadata",
    "href": "slides/index.html#repository-metadata",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Repository Metadata",
    "text": "Repository Metadata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExample Project Open Data Sharing"
  },
  {
    "objectID": "slides/index.html#thank-you",
    "href": "slides/index.html#thank-you",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Thank you!",
    "text": "Thank you!\n\n🌟 Please provide feedback on this workshop using this short survey.\nhttps://forms.gle/qVTvVgP8nafbAuXT8\n\n🌟 Stay connected!\n https://cghlewis.com/\n https://www.linkedin.com/in/crystal-lewis-922b4193/\n https://github.com/Cghlewis\n\n\n\n\nData Cleaning for Data Sharing // Cghlewis.github.io/ncme-data-cleaning-workshop/"
  },
  {
    "objectID": "prework.html",
    "href": "prework.html",
    "title": "Pre-work",
    "section": "",
    "text": "A portion of this workshop will be conducted in the Posit Cloud environment. Posit Cloud allows us all to work in the exact same environment with the same version of R, R packages, and directory of files. .\nPlease create a login to the Posit Cloud instance of this workshop here:\nhttps://posit.cloud/content/7872027\nAlternative\nIf you are struggling using Posit Cloud, you can download the materials locally on your machine.\nNote that the presenter will NOT be able to help you with local computer problems during the workshop. To do this you will need the following to do the following prior to the workshop:\npkgs &lt;- c(\"tidyverse\", \"readxl\", \"summarytools\", \"janitor\", \"pointblank\")\n\ninstall.packages(pkgs)\n# install.packages(\"usethis\")\nusethis::use_course(\n    \"https://github.com/Cghlewis/ncme-data-cleaning-workshop/raw/main/exercises/exercises.zip\",\n    destdir = \"___\")",
    "crumbs": [
      "Pre-work"
    ]
  },
  {
    "objectID": "prework.html#r-and-rstudio",
    "href": "prework.html#r-and-rstudio",
    "title": "Pre-work",
    "section": "R and RStudio",
    "text": "R and RStudio\nFor this workshop it is assumed that you are comfortable navigating the RStudio environment and that you have some understanding of things like packages, functions, objects, file paths, and R syntax. If you need any refreshers, I recommend reviewing the following materials.\n\nGetting Started with R\n\nWhat They Forgot to Teach You About R (In particular, the “A holistic workflow” section)\nR and Tidyverse for working with data\nR Software Handbook",
    "crumbs": [
      "Pre-work"
    ]
  },
  {
    "objectID": "prework.html#tidyverse",
    "href": "prework.html#tidyverse",
    "title": "Pre-work",
    "section": "Tidyverse",
    "text": "Tidyverse\nIf you’re new to the {tidyverse}, here are some materials I recommend reviewing before the workshop.\n\nR for Data Science\nTidyverse Skills for Data Science",
    "crumbs": [
      "Pre-work"
    ]
  },
  {
    "objectID": "index.html#ncme-2024-workshop",
    "href": "index.html#ncme-2024-workshop",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "NCME 2024 Workshop",
    "text": "NCME 2024 Workshop\n📆 April 11, 2024 // 8:45 am - 12:45 pm EDT\n🏨 In Person\n📝 NCME attendees can register here\n🏡 Workshop website",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nUnderstand how to assess a data set for 7 data quality indicators\nBe able to review a data set and apply a list of standardized data cleaning steps as needed\nFeel comfortable using R code to clean a data set\nUnderstand types of documentation that should be shared alongside data",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#is-this-workshop-for-me",
    "href": "index.html#is-this-workshop-for-me",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Is this workshop for me?",
    "text": "Is this workshop for me?\nThis workshop is for any education researcher who could benefit from guidance on how to take a messy raw dataset and organize it into a shareable data product.\nThis workshop assumes you have some experience working with rectangular data, as well as a basic working knowledge of the R programming language and experience working in RStudio. This course will focus on functions in the {Tidyverse} so familiarity with that package will be helpful, but is not required.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#further-learning",
    "href": "index.html#further-learning",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Further Learning",
    "text": "Further Learning\n\nData Management in Large-Scale Education Research book\nThe Basics of Data Management\nData Organization in Spreadsheets\nData Cleaning for Data Sharing Blog Post Series\nFour Simple Ways to Integrate your Data Dictionary into Your Data Cleaning Process\nR Data Wrangling Functions Wiki",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#speaker",
    "href": "index.html#speaker",
    "title": "Data Cleaning for Data Sharing Using R",
    "section": "Speaker",
    "text": "Speaker\n Crystal Lewis is an independent research data management consultant, providing recommendations, direct service, and training to education researchers and their teams across the country. She also co-organizes two community groups—R-Ladies St. Louis, an organization focused on promoting gender diversity in the R community, as well as the POWER (providing women opportunities in education research) Data Management Hub, where she facilitates peer data management support in the education research community.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is released under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA) license.\n   \nIn short, you may share and adapt this content with appropriate credit and notation of any changes. You may not use this material for any commercial purposes.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Materials",
    "section": "",
    "text": "View slides in full screen.",
    "crumbs": [
      "Slides"
    ]
  },
  {
    "objectID": "slides.html#slides",
    "href": "slides.html#slides",
    "title": "Materials",
    "section": "",
    "text": "View slides in full screen.",
    "crumbs": [
      "Slides"
    ]
  }
]