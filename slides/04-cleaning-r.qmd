# Cleaning in R {.background-secondary}

```{r}
#| echo: false
#| cache: false
countdown(minutes = 15, font_size = "2em")

```


## Review our sample data and documentation

<br>

:::: {.columns}

::: {.column width="40%"}

Take 5 minutes to review our data.

1. Log in to Posit Cloud and navigate to our project
2. Open the data folder and open "sample_tch_svy_raw.csv"

:::
 
::: {.column width="60%"}

![](images/sample-data.PNG){fig-align="center"}

```{r}
#| echo: false
#| cache: false
countdown(minutes = 5, font_size = "2em")

```

:::
:::



## Tidyverse

<br>

An opinionated collection of R packages designed for data science

All packages share an underlying design philosophy, grammar, and data structures

<br>

::: {layout-nrow=4}

![](images/dplyr.png)
![](images/tidyr.png)
![](images/stringr.png)
![](images/readr.png)
![](images/purrr.png)

:::

## Tidyverse

<br>

::: columns
::: {.column width="50%"}

[Tidy Evaluation](https://dplyr.tidyverse.org/articles/programming.html)

Selecting `test_score` and `grade_level` from our data frame named `sch_data`

<br>

```{r echo=FALSE}

sch_data <- tibble::tribble(~test_score, ~grade_level,
                350, 3,
                380, 4,
                290, 3)

```

```{r echo=TRUE}

select(sch_data, test_score, 
       grade_level)

```
:::

::: {.column width="50%"}

Base R

Selecting `test_score` and `grade_level` from our data frame named `sch_data`

<br>

```{r echo=TRUE}

sch_data[ , c("test_score", 
              "grade_level")]

```
:::
:::

## Pipes

-   2014+ magrittr pipe `%>%`

-   2021+ (R $\geq$ 4.1.0) native R pipe `|>`

. . .

Isabella Velásquez's blog post [*Understanding the native R pipe* \|\>](https://ivelasq.rbind.io/blog/understanding-the-r-pipe/) (2022)

<br>

. . .

::: columns
::: {.column width="50%"}
```{r echo=TRUE, eval=FALSE}

sch_data <- read_csv("school_data.csv")

sch_data2 <- select(sch_data, id, 
                    test_score)

sch_data3 <- filter(sch_data2, 
                    test_score > 300)

```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false

sch_data <- read_csv("school_data.csv") |>
  select(id, test_score) |>
  filter(test_score > 300)

```
:::
:::

. . .

<br>

To turn on the native pipe:

`Tools` → `Global Options` → `Code` → `Editing` → `Use Native Pipe Operator`

## Import our data

Common data importing functions

- `read_csv()` from the `readr` package

- `read_excel()` from the `readxl` package

- `read_sav()` from the `haven` package

Which function should we use to read in our sample data?

## Import our file

- `read_excel()` has several arguments. 
  - path
  - sheet = NULL
  - col_names = TRUE
  - na = ""
  - skip = 0
- Type `?read_excel()` in your console to see more arguments

## Exercise

Take 3 minutes to import the data.

1. Open "exercises.qmd" in our Posit Cloud project.
2. Navigate to exercise 1.
3. Update the code and run the code chunk using the green arrow.
4. If you get stuck, you can open "solutions.qmd"

```{r}
#| echo: false
#| cache: false
countdown(minutes = 3, font_size = "2em")

```


